// vim: ft=groovy et ts=2 sw=2:


    def notifyBuild(String buildStatus) {
    // Default values
    //def BUILD_USER = currentBuild.rawBuild.getCause(Cause.UserIdCause).getUserId()
    //echo $BUILD_USER
    buildStatus =  buildStatus ?: 'SUCCESSFUL'
    def colorName = 'GREEN'
    def colorCode = '#00FF00'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} triggered (${env.BUILD_URL})"
    
    
    if (buildStatus == 'SUCCESSFUL') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }

    // Send notifications
    slackSend (channel: '#test-alerts', color: colorCode, message: summary)
    slackUploadFile filePath: "*.html", initialComment:  "Newman HTML Report"
    //slackUploadFile (channel: "#test-alerts", credentialId: "ccda8d78-cd3d-4a6f-b0de-e898a78c1d02", filePath: "${WORKSPACE}/newman.html")

}
node('ansible') {
    ansiColor('xterm') {
      stage("Warming up") {
        container('ansible') {
          // Checking out public repo
          checkout scm
          // Loading library
          commonCode = load "${env.WORKSPACE}/application/pipelines/commonGroovy/common.groovy"

        }
      }
      stage("Test") {
         container('newman'){
                try{
                    sh """
                        npm install -g newman-reporter-htmlextra
                        newman run ${env.WORKSPACE}/application/pipelines/deploy/newman/collection.json -e ${env.WORKSPACE}/application/pipelines/deploy/newman/environment.json -r htmlextra --reporter-htmlextra-export ${env.WORKSPACE}/newman.html         
                        """
                    archiveArtifacts "newman.html"
                    }
                catch(err){
               currentBuild.result = "FAILED"
               throw err
               echo '${currentBuild.result}'
                   }
        finally{
            notifyBuild(currentBuild.result)
        } 
      }
     
          
      }

      
    }}

